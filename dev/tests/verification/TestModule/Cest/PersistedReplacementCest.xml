<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <cest name="PersistedReplacementCest">
        <before>
            <createData entity="ReplacementPerson" mergeKey="createData1"/>
        </before>
        <test name="PersistedReplacementTest">
            <createData entity="simpleData" mergeKey="createdData"/>
            <createData entity="UniquePerson" mergeKey="uniqueData"/>

            <fillField mergeKey="inputReplace" selector="#selector" userInput="StringBefore $createdData.firstname$ StringAfter"/>
            <fillField mergeKey="selectorReplace" selector="#$createdData.firstname$" userInput="input"/>
            <dragAndDrop mergeKey="selector12Replace" selector1="#$createdData.firstname$" selector2="$createdData.lastname$"/>
            <conditionalClick mergeKey="dependentSelectorReplace" dependentSelector="#$createdData.firstname$" selector="$createdData.lastname$" visible="true"/>
            <amOnUrl mergeKey="urlReplace" url="$createdData.firstname$.html"/>
            <searchAndMultiSelectOption mergeKey="parameterArrayReplacement" selector="#selector" parameterArray="[$createdData.firstname$, $createdData.lastname$]"/>
            <fillField mergeKey="allTypesMixed" selector="#selector" userInput="{{simpleData.firstname}} $createdData.firstname$ stringLiteral"/>
            <searchAndMultiSelectOption mergeKey="parameterArrayMixed" selector="#selector" parameterArray="[$createdData.firstname$, {{simpleData.firstname}}, stringLiteral]"/>
            <!-- expected, actual replacements -->
            <assertStringStartsNotWith mergeKey="assert1" expected="D" actual="$$createData1.lastname$$, $$createData1.firstname$$" message="fail"/>
            <assertStringStartsWith mergeKey="assert2" expected="W" actual="$uniqueData.firstname$ $uniqueData.lastname$" message="pass"/>
            <assertEquals mergeKey="assert5" expected="$$createData1.lastname$$" actual="$$createData1.lastname$$" message="pass"/>
            <assertFileExists mergeKey="assert6" actual="../Data/SampleData.xml" message="pass"/>
            <!-- expectedArray, actualArray replacements -->
            <assertArraySubset mergeKey="assert9" expectedArray="[$$createData1.lastname$$, $$createData1.firstname$$]" actualArray="[$$createData1.lastname$$, $$createData1.firstname$$, 1]" message="pass"/>
            <assertArraySubset mergeKey="assert10" expectedArray="[$uniqueData.firstname$, $uniqueData.lastname$]" actualArray="[$uniqueData.firstname$, $uniqueData.lastname$, 1]" message="pass"/>
            <assertArrayHasKey mergeKey="assert3" expected="lastname" actualArray="[['lastname' => $$createData1.lastname$$], ['firstname' => $$createData1.firstname$$]" message="pass"/>
            <assertArrayHasKey mergeKey="assert4" expected="lastname" actualArray="[['lastname' => $uniqueData.lastname$], ['firstname' => $uniqueData.firstname$]" message="pass"/>
            <!-- message replacements -->
            <fail mergeKey="assert7" message="$uniqueData.firstname$ $uniqueData.lastname$"/>
            <fail mergeKey="assert8" message="$$createData1.firstname$$ $$createData1.lastname$$"/>
        </test>
    </cest>
</config>
